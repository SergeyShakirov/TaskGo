#!/usr/bin/env node

console.log("üîç TaskGo Diagnostic Tool");
console.log("=========================\n");

const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
const requiredFiles = [
  "package.json",
  "index.js",
  "App.tsx",
  "app.json",
  "android/build.gradle",
  "android/app/build.gradle",
  "android/app/src/main/java/com/taskgo/MainActivity.java",
  "android/app/src/main/java/com/taskgo/MainApplication.java",
];

console.log("üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:");
requiredFiles.forEach((file) => {
  const exists = fs.existsSync(file);
  console.log(`  ${exists ? "‚úÖ" : "‚ùå"} ${file}`);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
console.log("\nüì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:");
const nodeModulesExists = fs.existsSync("node_modules");
console.log(`  ${nodeModulesExists ? "‚úÖ" : "‚ùå"} node_modules`);

if (nodeModulesExists) {
  const reactNativeExists = fs.existsSync("node_modules/react-native");
  console.log(`  ${reactNativeExists ? "‚úÖ" : "‚ùå"} react-native`);

  const reactExists = fs.existsSync("node_modules/react");
  console.log(`  ${reactExists ? "‚úÖ" : "‚ùå"} react`);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º Android —Ñ–∞–π–ª—ã
console.log("\nü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º Android –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:");
const gradlewExists =
  fs.existsSync("android/gradlew") || fs.existsSync("android/gradlew.bat");
console.log(`  ${gradlewExists ? "‚úÖ" : "‚ùå"} gradle wrapper`);

const mainActivityExists = fs.existsSync(
  "android/app/src/main/java/com/taskgo/MainActivity.java"
);
console.log(`  ${mainActivityExists ? "‚úÖ" : "‚ùå"} MainActivity.java`);

const mainApplicationExists = fs.existsSync(
  "android/app/src/main/java/com/taskgo/MainApplication.java"
);
console.log(`  ${mainApplicationExists ? "‚úÖ" : "‚ùå"} MainApplication.java`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º Flipper —Ñ–∞–π–ª—ã
const debugFlipperExists = fs.existsSync(
  "android/app/src/debug/java/com/taskgo/ReactNativeFlipper.java"
);
console.log(
  `  ${debugFlipperExists ? "‚úÖ" : "‚ùå"} Debug ReactNativeFlipper.java`
);

const releaseFlipperExists = fs.existsSync(
  "android/app/src/release/java/com/taskgo/ReactNativeFlipper.java"
);
console.log(
  `  ${releaseFlipperExists ? "‚úÖ" : "‚ùå"} Release ReactNativeFlipper.java`
);

// –ß–∏—Ç–∞–µ–º release Flipper —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
if (releaseFlipperExists) {
  try {
    const flipperContent = fs.readFileSync(
      "android/app/src/release/java/com/taskgo/ReactNativeFlipper.java",
      "utf8"
    );
    if (flipperContent.trim().length === 0) {
      console.log("  ‚ö†Ô∏è  Release ReactNativeFlipper.java –ø—É—Å—Ç–æ–π!");
    } else {
      console.log("  ‚úÖ Release ReactNativeFlipper.java —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥");
    }
  } catch (e) {
    console.log("  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Release ReactNativeFlipper.java");
  }
}

console.log("\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ React Native...");
try {
  const rnVersion = execSync("npx react-native --version", {
    encoding: "utf8",
    timeout: 10000,
  });
  console.log(`  ‚úÖ React Native CLI: ${rnVersion.trim()}`);
} catch (e) {
  console.log(`  ‚ùå –û—à–∏–±–∫–∞ React Native CLI: ${e.message}`);
}

console.log("\n‚òï –ü—Ä–æ–≤–µ—Ä—è–µ–º Java...");
try {
  const javaVersion = execSync("java -version", {
    encoding: "utf8",
    stderr: "pipe",
    timeout: 5000,
  });
  console.log("  ‚úÖ Java —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
} catch (e) {
  console.log(`  ‚ùå Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${e.message}`);
}

console.log("\nü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º ADB...");
try {
  const adbDevices = execSync("adb devices", {
    encoding: "utf8",
    timeout: 5000,
  });
  console.log("  ‚úÖ ADB —Ä–∞–±–æ—Ç–∞–µ—Ç");
  console.log(`  –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n${adbDevices}`);
} catch (e) {
  console.log(`  ‚ùå ADB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${e.message}`);
}

console.log("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:");
if (!nodeModulesExists) {
  console.log("  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm install");
}
if (!gradlewExists) {
  console.log("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Android SDK –∏ React Native –Ω–∞—Å—Ç—Ä–æ–π–∫–∏");
}
console.log(
  "  ‚Ä¢ –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è, –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npx react-native doctor"
);
console.log("  ‚Ä¢ –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞: npx react-native start --reset-cache");

console.log("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
